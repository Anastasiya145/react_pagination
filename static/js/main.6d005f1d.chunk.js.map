{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagination","Math","ceil","length","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","itemPerPage","setItemPerPage","setCurrentPage","lastItem","firstItem","visibleItems","slice","id","value","onChange","ev","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAuBX,EAAW,EADlBY,KAAKC,KAAKN,EAAQC,IAOxC,OAJIC,EAAcE,EAAWG,QAC3BJ,EAAa,GAIb,qBAAIK,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CAAEC,SAA0B,IAAhBR,IADjD,SAGE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,kBAAMT,EAAaD,EAAc,IAL5C,oBAWDE,EAAWS,KAAI,SAAAC,GAAI,OAClB,oBAEEN,UAAWC,IACT,YAAa,CAAEM,OAAQD,IAASZ,IAHpC,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,UACLC,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KAXEA,MAgBT,oBACEN,UAAWC,IACT,YAAa,CAAEC,SAAUR,IAAgBE,EAAWG,SAFxD,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAAWG,OAC1CK,QAAS,kBAAMT,EAAaD,EAAc,IAL5C,wBCzDFc,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBmB,EAApB,KAMMC,EAAWpB,EAAciB,EAAcH,EAAMT,OAC/CS,EAAMT,OACNL,EAAciB,EAEZI,GAAarB,EAAc,GAAKiB,EAAc,EAE9CK,EAAe,YAAIR,GAAOS,MAAMF,EAAY,EAAGD,GAErD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCqB,EADjC,cACgDD,EADhD,eAC+DN,EAAMT,OADrE,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHC,MAAOR,EACPX,UAAU,eACVoB,SAAU,SAACC,GAAD,OAAQT,GAAgBS,EAAGC,OAAOH,QAL9C,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOgB,EAAMT,OACbN,QAASkB,EACTjB,YAAaA,EACbC,aA7Ce,SAACW,GACpBO,EAAeP,MA+Cb,6BACGU,EAAaX,KAAI,SAAAmB,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC5DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6d005f1d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pagination: number[] = getNumbers(1, numberOfPages);\n\n  if (currentPage > pagination.length) {\n    onPageChange(1);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pagination.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item', { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#{page}\"\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item', { disabled: currentPage === pagination.length },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagination.length}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const lastItem = currentPage * itemPerPage > items.length\n    ? items.length\n    : currentPage * itemPerPage;\n\n  const firstItem = (currentPage - 1) * itemPerPage + 1;\n\n  const visibleItems = [...items].slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={itemPerPage}\n            className=\"form-control\"\n            onChange={(ev) => setItemPerPage(+ev.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}